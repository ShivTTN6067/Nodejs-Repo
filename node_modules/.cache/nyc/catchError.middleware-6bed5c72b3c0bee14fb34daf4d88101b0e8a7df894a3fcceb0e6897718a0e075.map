{"version":3,"file":"/Users/shivanggarg/Desktop/PracticeNodeTS/src/Error/catchError.middleware.ts","sources":["/Users/shivanggarg/Desktop/PracticeNodeTS/src/Error/catchError.middleware.ts"],"names":[],"mappings":";;;AAEA;;;;;;GAMG;AACI,MAAM,YAAY,GAAG,CAAC,kBAA4B,EAAC,EAAE;IACxD,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACvD,IAAG;YACC,kBAAkB,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAAC,CAAC;SACpC;QAAA,OAAM,GAAG,EAAC;YACP,IAAI,CAAC,GAAG,CAAC,CAAC;SACb;IACL,CAAC,CAAA;AACL,CAAC,CAAA;AARY,QAAA,YAAY,gBAQxB","sourcesContent":["import { Request, Response, NextFunction, Errback } from 'express';\n\n/**\n * Catch error when any controller throws an error\n *\n * @param controllerFunction - Object - Express request object\n *\n * @returns {void}\n */\nexport const errorCatcher = (controllerFunction: Function)=>{\n    return (req: Request, res: Response, next: NextFunction) => {\n        try{\n            controllerFunction(req,res,next);\n        }catch(err){\n            next(err);\n        }\n    }\n}"]}