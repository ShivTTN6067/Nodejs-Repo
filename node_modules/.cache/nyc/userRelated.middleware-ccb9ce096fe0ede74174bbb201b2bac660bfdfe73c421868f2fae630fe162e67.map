{"version":3,"file":"/Users/shivanggarg/Desktop/PracticeNodeTS/src/Middleware/userRelated.middleware.ts","sources":["/Users/shivanggarg/Desktop/PracticeNodeTS/src/Middleware/userRelated.middleware.ts"],"names":[],"mappings":";;;AAEO,MAAM,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;;IAC3E,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,IAAG,CAAA,MAAA,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,0CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,MAAK,WAAW,EAAC;QAC3D,OAAO,IAAI,EAAE,CAAC;KACjB;IACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACjB,GAAG,EAAG,qBAAqB;KAC9B,CAAC,CAAA;AACN,CAAC,CAAA;AARY,QAAA,WAAW,eAQvB","sourcesContent":["import { Request, Response, NextFunction, Errback, Router } from 'express';\n\nexport const authChecker = (req: Request, res: Response, next: NextFunction) => { \n    console.log(\"fvjfehb\",req.headers);\n    if(req.headers['authorization']?.split(' ')[1] === \"123321123\"){\n        return next();\n    } \n    res.status(401).send({\n        msg : \"Invalid credentials\",\n    })\n}"]}