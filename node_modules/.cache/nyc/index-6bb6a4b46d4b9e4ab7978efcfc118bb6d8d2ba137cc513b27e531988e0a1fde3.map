{"version":3,"file":"/Users/shivanggarg/Desktop/PracticeNodeTS/src/index.ts","sources":["/Users/shivanggarg/Desktop/PracticeNodeTS/src/index.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,8DAAqC;AAErC,oDAA4B;AAE5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,wDAA+B;AAI/B,MAAM,GAAG,GAAW,IAAA,iBAAO,GAAE,CAAC;AAE9B,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3B,GAAG,CAAC,GAAG,CAAC,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC1D,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,WAAW,CAAC,CAAA;IAC5C,IAAI,EAAE,CAAA;AACR,CAAC,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACrD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;IACxC,IAAI,EAAE,CAAA;AACR,CAAC,CAAC,CAAA;AAEF;;GAEG;AAGH,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,iBAAM,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAW,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACvE,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAA;IAC9C,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,kBAAkB,EAAE,CAAC,CAAA;AACnD,CAAC,CAAC,CAAA;AAIF,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE;IAChC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;AACpC,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import express from 'express';\n\nimport bodyParser from \"body-parser\";\n\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nimport Routes from './Routers';\n\nimport { Express, Request, Response, NextFunction, Errback } from 'express';\n\nconst app:Express = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use((req: Request, res: Response, next: NextFunction) => {\n  console.log('Request URL:', req.originalUrl)\n  next()\n}, (req: Request, res: Response, next: NextFunction) => {\n  console.log('Request Type:', req.method)\n  next()\n})\n\n/**\n * Routes\n */\n\n\napp.use('/app', Routes);\n\napp.use((err:Errback, req: Request, res: Response, next: NextFunction) => {\n  console.log(\"uiyhfgcvvbn jkhjgcvghukhb hgfgy\")\n  console.error(err)\n  res.status(500).send({ msg: 'Something broke!' })\n})\n\n\n\napp.listen(process.env.PORT, () => {\n  console.info(` listening at 4000`)\n});\n\nexport default app;"]}